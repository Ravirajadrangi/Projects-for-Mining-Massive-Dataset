import numpy as np
import math

y = [2189, 2078, 2009, 1978, 1956, 1939, 1930, 1926, 1919, 1912, 1900, 1897, 1902, 1892, 1888, 1886, 1875, 1859, 1844, 1840, 1839, 1835, 1823, 1823, 1820, 1820, 1807, 1809, 1802, 1798, 1800, 1795, 1797, 1791, 1787, 1790, 1784, 1780, 1772, 1760, 1752, 1755, 1754, 1753, 1749, 1743, 1746, 1744, 1739, 1740, 1740, 1732, 1739, 1737, 1737, 1733, 1729, 1723, 1726, 1732, 1726, 1716, 1716, 1719, 1728, 1715, 1717, 1717, 1708, 1706, 1701, 1696, 1699, 1698, 1696, 1695, 1691, 1689, 1686, 1680, 1683, 1679, 1675, 1667, 1663, 1656, 1656, 1643, 1641, 1635, 1632, 1628, 1625, 1626, 1619, 1623, 1625, 1620, 1613, 1615, 1616, 1629, 1619, 1613, 1618, 1610, 1605, 1601, 1608, 1608, 1608, 1605, 1603, 1605, 1606, 1610, 1606, 1602, 1608, 1606, 1603, 1603, 1597, 1589, 1587, 1591, 1590, 1586, 1589, 1592, 1590, 1587, 1584, 1590, 1585, 1596, 1580, 1581, 1578, 1580, 1572, 1574, 1578, 1570, 1565, 1566, 1565, 1558, 1559, 1558, 1556, 1555, 1550, 1549, 1546, 1546, 1553, 1557, 1554, 1549, 1540, 1542, 1542, 1545, 1545, 1541, 1540, 1545, 1543, 1542, 1538, 1544, 1539, 1548, 1548, 1545, 1547, 1545, 1542, 1543, 1543, 1544, 1538, 1533, 1530, 1530, 1532, 1536, 1538, 1543, 1543, 1545, 1546, 1533, 1518, 1533, 1528, 1520, 1520, 1516, 1512, 1495, 1482, 1478, 1480, 1483, 1485, 1480, 1485, 1479, 1476, 1474, 1475, 1471, 1472, 1479, 1477, 1478, 1480, 1483, 1484, 1481, 1477, 1470, 1474, 1474, 1470, 1466, 1462, 1465, 1460, 1458, 1459, 1460, 1462, 1458, 1455, 1455, 1453, 1443, 1442, 1442, 1445, 1444, 1442, 1443, 1443, 1444, 1446, 1445, 1439, 1438, 1437, 1440, 1436, 1432, 1431, 1428, 1426, 1434, 1427, 1429, 1425, 1422, 1429, 1421, 1425, 1419, 1414, 1410, 1407, 1409, 1406, 1401, 1402, 1394, 1399, 1398, 1398, 1395, 1394, 1398, 1396, 1396, 1392, 1391, 1393, 1397, 1400, 1393, 1394, 1399, 1400, 1401, 1393, 1391, 1391, 1387, 1384, 1386, 1381, 1379, 1377, 1377, 1376, 1372, 1378, 1375, 1371, 1373, 1371, 1373, 1370, 1365, 1370, 1369, 1368, 1366, 1362, 1366, 1366, 1365, 1362, 1363, 1359, 1360, 1362, 1363, 1362, 1360, 1360, 1361, 1362, 1366, 1362, 1361, 1357, 1357, 1361, 1355, 1355, 1348, 1350, 1344, 1338, 1332, 1334, 1333, 1332, 1335, 1334, 1332, 1340, 1343, 1348, 1352, 1355, 1351, 1355, 1352, 1357, 1356, 1353, 1349, 1353, 1358, 1351, 1350, 1350, 1350, 1347, 1346, 1344, 1341, 1338, 1341, 1338, 1342, 1344, 1341, 1338, 1339, 1343, 1343, 1342, 1343, 1349, 1346, 1343, 1341, 1348, 1345, 1347, 1349, 1349, 1348, 1352, 1353, 1353, 1350, 1355, 1355, 1352, 1349, 1344, 1340, 1345, 1343, 1346, 1345, 1347, 1349, 1346, 1349, 1347, 1343, 1349, 1345, 1341, 1349, 1347, 1341, 1342, 1340, 1343, 1343, 1341, 1347, 1349, 1349, 1345, 1350, 1346, 1345, 1345, 1339, 1341, 1341, 1341, 1345, 1346, 1340, 1340, 1342, 1341, 1349, 1341, 1346, 1348, 1350, 1353, 1353, 1351, 1349, 1347, 1348, 1358, 1357, 1356, 1354, 1353, 1362, 1363, 1364, 1365, 1362, 1365, 1367, 1367, 1368, 1365, 1376, 1370, 1372, 1374, 1367, 1370, 1365, 1365, 1366, 1358, 1359, 1364, 1356, 1363, 1361, 1361, 1365, 1359, 1357, 1362, 1365, 1363, 1359, 1359, 1354, 1363, 1351, 1350, 1344, 1341, 1343, 1347, 1345, 1351, 1348, 1359, 1355, 1354, 1361, 1363, 1361, 1357, 1354, 1349, 1364, 1359, 1353, 1351, 1346, 1345, 1351, 1353, 1348, 1342, 1345, 1345, 1332, 1327, 1327, 1335, 1332, 1327, 1330, 1331, 1330, 1330, 1328, 1329, 1326, 1321, 1320, 1323, 1321, 1326, 1327, 1323, 1321, 1320, 1326, 1320, 1315, 1311, 1317, 1322, 1320, 1325, 1322, 1332, 1331, 1331, 1327, 1324, 1327, 1322, 1321, 1323, 1325, 1327, 1322, 1320, 1320, 1318, 1317, 1319, 1317, 1319, 1316, 1315, 1316, 1320, 1320, 1321, 1317, 1325, 1320, 1310, 1307, 1302, 1313, 1304, 1306, 1313, 1315, 1316, 1315, 1320, 1321, 1318, 1317, 1319, 1302, 1303, 1300, 1294, 1288, 1283, 1288, 1280, 1271, 1266, 1268, 1267, 1265, 1263, 1270, 1269, 1263, 1260, 1254, 1251, 1257, 1256, 1255, 1253, 1251, 1260, 1258, 1259, 1260, 1263, 1264, 1270, 1269, 1276, 1277, 1283, 1285, 1290, 1288, 1281, 1283, 1287, 1286, 1287, 1291, 1295, 1301, 1299, 1294, 1304, 1302, 1315, 1308, 1317, 1315, 1323, 1321, 1326, 1334, 1327, 1321, 1313, 1305, 1287, 1274, 1271, 1273, 1274, 1274, 1278, 1280, 1281, 1276, 1274, 1273, 1276, 1276, 1280, 1272, 1272, 1269, 1267, 1273, 1266, 1268, 1268, 1266, 1262, 1259, 1254, 1263, 1262, 1261, 1258, 1257, 1260, 1255, 1251, 1248, 1243, 1244, 1240, 1240, 1248, 1252, 1250, 1247, 1236, 1243, 1242, 1242, 1243, 1247, 1252, 1251, 1249, 1257, 1253, 1252, 1252, 1239, 1241, 1243, 1246, 1241, 1240, 1238, 1243, 1254, 1248, 1253, 1250, 1248, 1252, 1258, 1256, 1248, 1246, 1244, 1239, 1256, 1251, 1249, 1242, 1246, 1242, 1243, 1243, 1237, 1233, 1226, 1222, 1229, 1228, 1229, 1227, 1231, 1234, 1233, 1230, 1227, 1230, 1232, 1232, 1238, 1237, 1239, 1245, 1242, 1247, 1250, 1248, 1251, 1254, 1254, 1252, 1254, 1250, 1245, 1249, 1250, 1251, 1247, 1250, 1246, 1242, 1236, 1243, 1241, 1246, 1240, 1245, 1236, 1245, 1242, 1247, 1246, 1254, 1252, 1243, 1245, 1251, 1245, 1242, 1245, 1247, 1237, 1234, 1240, 1249, 1260, 1262, 1269, 1281, 1285, 1280, 1279, 1281, 1290, 1292, 1299, 1315, 1309, 1319, 1319, 1302, 1299, 1288, 1282, 1277, 1280, 1275, 1283, 1279, 1269, 1264, 1267, 1264, 1272, 1263, 1257, 1249, 1253, 1240, 1232, 1233, 1240, 1236, 1230, 1233, 1234, 1235, 1232, 1229, 1231, 1236, 1236, 1249, 1240, 1240, 1239, 1238, 1246, 1242, 1243, 1250, 1250, 1258, 1258, 1257, 1253, 1260, 1262, 1263, 1274, 1273, 1278, 1280, 1280, 1276, 1274, 1273, 1278, 1281, 1278, 1281, 1285, 1284, 1284, 1280, 1279, 1288, 1288, 1289, 1302, 1297, 1302, 1311, 1309, 1309, 1314, 1330, 1328, 1332, 1341, 1337, 1329, 1322, 1326, 1323, 1329, 1327, 1326, 1334, 1336, 1348, 1346, 1345, 1331, 1328, 1332, 1327, 1330, 1319, 1318, 1320, 1319, 1318, 1313, 1311, 1307, 1308, 1315, 1315, 1325, 1324, 1314, 1303, 1305, 1307, 1303, 1299, 1300, 1301, 1290, 1295, 1298, 1308, 1296, 1296, 1298, 1295, 1292, 1286, 1281, 1287, 1286, 1285, 1283, 1280, 1284, 1283, 1286, 1296, 1295, 1292, 1298, 1294, 1298, 1291, 1292, 1290, 1281, 1275, 1267, 1251, 1238, 1234, 1243, 1235, 1234, 1227, 1227, 1224, 1218, 1221, 1216, 1210, 1209, 1194, 1194, 1194, 1196, 1199, 1193, 1190, 1190, 1193, 1194, 1199, 1196, 1200, 1194, 1199, 1198, 1210, 1210, 1212, 1210, 1209, 1204, 1206, 1205, 1206, 1196, 1194, 1194, 1193, 1190, 1195, 1193, 1189, 1188, 1186, 1183, 1185, 1182, 1182, 1188, 1195, 1192, 1194, 1199, 1191, 1188, 1186, 1189, 1188, 1192, 1192, 1189, 1185, 1183, 1185, 1189, 1194, 1187, 1182, 1172, 1174, 1177, 1182, 1180, 1176, 1176, 1179, 1181, 1180, 1181, 1187]

y = [10, 20, 30, 50, 70, 100, 90, 70, 50, 30, 10, 70, 100, 90, 110, 80, 30,10]

def find_peak(c):
	windows = []
	mean = c[0]
	p = 5
	tao = 2
	meandev = math.sqrt(np.var(c[:p]))

	for i in range(1, len(c)):
		if math.fabs(c[i] - mean)/meandev > tao and c[i] > c[i-1]:
			start = i-1
			while i < len(c) and c[i] > c[i-1]:
				(mean, meandev) = update(mean, meandev, c[i])
				i += 1
			end = start
			while i < len(c) and c[i] > c[start]:
				if math.fabs(c[i] - mean)/meandev > tao and c[i] > c[i-1]:
					i -= 1
					end = i
					break
				else:
					(mean, meandev) = update(mean, meandev, c[i])
					end = i
					i += 1
			windows.append((start, end))
		else:
			(mean, meandev) = update(mean, meandev, c[i])

	return windows

def update(oldmean, oldmeandev, updatevalue):
	alpha = 0.125
	diff = math.fabs(oldmean - updatevalue)
	newmeandev = alpha*diff + (1-alpha)*oldmeandev
	newmean = alpha*updatevalue + (1-alpha)*oldmean
	return (newmean, newmeandev)


def peak_to_plot(w, leng, val=100):
	ret = [0] * leng
	for window in w:
		start = window[0]
		end = window[1]
		if start > end:
			temp = start
			start = end
			end = temp
		for i in range(start, end):
			ret[i] = val
	return ret


w = find_peak(y)
print "peak: ", w

yplots = peak_to_plot(w, len(y))
print yplots

